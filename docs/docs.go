// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ads": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает пагинированный список объявлений с возможностью фильтрации и сортировки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ads"
                ],
                "summary": "Получить список объявлений",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Количество элементов на странице",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "created_at",
                            "price"
                        ],
                        "type": "string",
                        "default": "created_at",
                        "description": "Поле для сортировки (created_at, price)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "default": "DESC",
                        "description": "Порядок сортировки (ASC, DESC)",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Минимальная цена",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Максимальная цена",
                        "name": "max_price",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.FeedResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные параметры запроса",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает новое объявление от имени авторизованного пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ads"
                ],
                "summary": "Создать объявление",
                "parameters": [
                    {
                        "description": "Данные объявления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateAdRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CreateAdResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса или ошибки валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ads/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает полную информацию об объявлении по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ads"
                ],
                "summary": "Получить объявление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID объявления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.GetAdResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID объявления",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Объявление не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет информацию об объявлении (только для автора объявления)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ads"
                ],
                "summary": "Обновить объявление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID объявления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateAdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateAdResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса или ошибки валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Нет прав на обновление",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Объявление не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет объявление по ID (только для автора объявления)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ads"
                ],
                "summary": "Удалить объявление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID объявления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Объявление успешно удалено"
                    },
                    "400": {
                        "description": "Неверный ID объявления",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Нет прав на удаление",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Объявление не найдено",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Проверяет учетные данные пользователя и возвращает JWT токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса или ошибки валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Создает нового пользователя в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.RegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.RegistrationResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса или ошибки валидации",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким именем уже существует",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.AdResponse": {
            "description": "Информация об объявлении",
            "type": "object",
            "properties": {
                "author_username": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "handler.CreateAdRequest": {
            "description": "Данные для создания нового объявления",
            "type": "object",
            "required": [
                "caption",
                "description",
                "price"
            ],
            "properties": {
                "caption": {
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 3
                },
                "description": {
                    "type": "string",
                    "maxLength": 1024
                },
                "image_url": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "handler.CreateAdResponse": {
            "description": "Информация о созданном объявлении",
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "handler.FeedResponse": {
            "description": "Ответ со списком объявлений и пагинацией",
            "type": "object",
            "properties": {
                "ads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.AdResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "handler.GetAdResponse": {
            "description": "Полная информация об объявлении",
            "type": "object",
            "properties": {
                "author_username": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "is_owner": {
                    "type": "boolean"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "handler.LoginRequest": {
            "description": "Запрос для аутентификации пользователя",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "handler.LoginResponse": {
            "description": "Ответ после успешной аутентификации пользователя",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "current_user": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_authorized": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.RegistrationRequest": {
            "description": "Запрос для регистрации нового пользователя",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "handler.RegistrationResponse": {
            "description": "Ответ после успешной регистрации пользователя",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "current_user": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_authorized": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateAdRequest": {
            "description": "Данные для обновления объявления (все поля опциональны)",
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 3
                },
                "description": {
                    "type": "string",
                    "maxLength": 1024
                },
                "image_url": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "handler.UpdateAdResponse": {
            "description": "Информация об обновленном объявлении",
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "VK Internship API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
